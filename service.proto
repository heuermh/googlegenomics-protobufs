// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package cloud.genomics.readstore;

import "read.proto";
import "readset.proto";
import "dataset.proto";
import "job.proto";


service ReadstoreService {

  // Readsets

  // Creates readsets by asynchronously importing the provided information.
  rpc ImportReadsets(ImportReadsetsRequest) returns (ImportReadsetsResponse) {
    option (api.http) = {post: "/readsets/import" body: "*"};
  }

  // Exports readsets to a file.
  rpc ExportReadsets(ExportReadsetsRequest) returns (ExportReadsetsResponse) {
    option (api.http) = {post: "/readsets/export" body: "*"};
  }

  // Gets a list of readsets matching the criteria.
  rpc SearchReadsets(SearchReadsetsRequest) returns (SearchReadsetsResponse) {
    option (api.http) = {post: "/readsets/search" body: "*"};
  }


  // Reads

  // Gets a list of reads matching the criteria.
  rpc SearchReads(SearchReadsRequest) returns (SearchReadsResponse) {
    option (api.http) = {post: "/reads/search" body: "*"};
  }


  // Jobs

  // Gets a job by ID.
  rpc GetJob(GetJobRequest) returns (Job) {
    option (api.http) = {get: "/jobs/{job_id}"};
  }
}


// Readsets

message SearchReadsetsRequest {
  // Restricts this query to readsets within the given datasets.
  // At least one ID must be provided.
  repeated string dataset_ids = 1;

  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // "nextPageToken" from the previous response.
  optional string page_token = 2;
}

message SearchReadsetsResponse {
  // The list of matching Readsets.
  repeated Readset readsets = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  optional string next_page_token = 2;
}

message ImportReadsetsRequest {
  // Required. The ID of the dataset this readset belongs to.
  optional string dataset_id = 1;

  // A list of URIs pointing at BAM or FASTQ files in Google Cloud Storage.
  repeated string source_uris = 2;

  // Alignment options for readset imports.
  message AlignmentOptions {
    // A flag indicating whether or not the source files should be (re)aligned.
    optional bool align = 1;

    // A list of FASTQ files that provide the reverse reads for the pairing.
    // This must contain the same number of files as 'source_uris'.
    // The FASTQ files at the same index will be treated as pairs.
    repeated string paired_uris = 2;

    // Additional metadata for readset imports.
    message Metadata {

      // A metadata key-value pair.
      message Item {
        // A string which maps to a value.
        optional string key = 1;
        // The string value.
        optional string value = 2;
      }

      // A list of key-value pairs.
      repeated Item items = 1;
    }

    // Metadata to be passed to the aligner.
    optional Metadata metadata = 3;
  }

  // Options that capture if and how to align the source files.
  optional AlignmentOptions alignment_options = 3;
}

// (-- Next ID: 3 --)
message ImportReadsetsResponse {

  // A job ID that can be used to get status information.
  optional string job_id = 2;
}

message ExportReadsetsRequest {

  // The Google Cloud project number that owns this export.
  // This is the project that will be billed.
  optional int64 project_id = 2;

  // A Google Cloud Storage URI where the exported BAM file will be created.
  optional string export_uri = 4;

  // The IDs of the readsets to export.
  repeated string readset_ids = 5;
}

message ExportReadsetsResponse {

  // An job ID that can be used to get status information.
  optional string job_id = 1;
}


// Reads

message SearchReadsRequest {

  // If specified, will restrict this query to reads within the given datasets.
  // At least one dataset ID or a readset ID must be provided.
  repeated string dataset_ids = 6;

  // If specified, will restrict this query to reads within the given readsets.
  // At least one dataset ID or a readset ID must be provided.
  repeated string readset_ids = 1;

  // The sequence to query. (e.g. 'X' for the X chromosome)
  // Leaving this blank returns results from all sequences, including
  // unmapped reads.
  optional string sequence_name = 2;

  // The start position (1-based) of this query. If a sequence name is
  // specified, this defaults to 1.
  optional uint64 sequence_start = 3;

  // The end position (1-based, inclusive) of this query. If a sequence name is
  // specified, this defaults to the sequence's length.
  optional uint64 sequence_end = 4;

  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // "nextPageToken" from the previous response.
  optional string page_token = 5;
}

message SearchReadsResponse {

  // The list of matching Reads. The resulting Reads are sorted by position.
  // Unmapped reads, which have no position, are returned last and are further
  // sorted by name.
  repeated Read reads = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  optional string next_page_token = 2;
}


// Jobs

// (-- Next ID: 3 --)
message GetJobRequest {

  // The ID of the job.
  optional string job_id = 1;
}